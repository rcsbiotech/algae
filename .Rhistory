library(git2r)
test<-c(0.03, 0.01, 0.05, 0.0015, 0.00016, 0.03, 0.004, 0.005, 0.0004, 0.000006, 0.01, 0.1, 0.3, 0.05, 0.04, 0.4, 0.6)
p.adjust(test)
p.adjust(test) < 0.05
sum(p.adjust(test) < 0.05)
python
python2
reticulate::repl_python()
test = 3
A = [3, 2, 1]
A
A
A
A = [3, 2, 1], 3
A
A = [3, 2, 1], 3, [3]
A
A[1]
A[2]
A[3]
A[1]
A[0]
A[0][1]
A[0][]
A[0][-1]
A[0][::-1]
### [r2c] Dummy vars
dummy.input <- "test/01_deseq2_Wald/results/06_diffex/salmon_quant_PRJNA609760"
dummy.metadata <- read.delim("E:/Workspace/GIT/algae2/test/01_deseq2_Wald/data/intel/PRJNA609760/metadata.txt")
dummy.map <- read.delim("E:/Workspace/GIT/algae2/test/01_deseq2_Wald/results/04_trinity_assembly/trinity_PRJNA609760/gene_trans_map.transposed", stringsAsFactors=FALSE)
dummy.threads <- 6
### Quant files path
files <- file.path(dummy.input, dummy.metadata$Run, "quant.sf")
### Extract all treatments
### Import with tximport
txi <- tximport(files, type="salmon", tx2gene = dummy.map)
# head(txi$counts, 4)
dds <- DESeqDataSetFromTximport(txi, colData = dummy.metadata, design =~ C_Temperature)
require("tximport")
# head(txi$counts, 4)
dds <- DESeqDataSetFromTximport(txi, colData = dummy.metadata, design =~ C_Temperature)
require("DESeq2")
require("tximport")
require("gtools")
require("BiocParallel")
# head(txi$counts, 4)
dds <- DESeqDataSetFromTximport(txi, colData = dummy.metadata, design =~ C_Temperature)
### Import with tximport
txi <- tximport(files, type="salmon", tx2gene = dummy.map)
# head(txi$counts, 4)
dds <- DESeqDataSetFromTximport(txi, colData = dummy.metadata, design =~ C_Temperature)
### Extract all treatments
grep(pattern = "C_", x = colnames(dummy.metadata))
### Extract all treatments
treatmentCols <- grep(pattern = "C_", x = colnames(dummy.metadata))
treatmentCols
View(dummy.metadata)
### Extract all treatments
treatmentCols <- grep(pattern = "^C_", x = colnames(dummy.metadata))
### Import with tximport
txi <- tximport(files, type="salmon", tx2gene = dummy.map)
treatmentCols
timeCourseCols <- grep(pattern = "^TC_", x = colnames(dummy.metadata))
treatmentCols
timeCourseCols
head(txi)
head(txi$counts)
dummy.metadata
install.packages("remotes")
remotes::install_github("boydorr/RDiversity")
library("rdiversity")
# Create Lookup table
Species <- c("tenuifolium", "asterolepis", "simplex var.grandiflora", "simplex var.ochnacea")
Genus <- c("Protium", "Quararibea", "Swartzia", "Swartzia")
Family <- c("Burseraceae", "Bombacaceae", "Fabaceae", "Fabaceae")
Subclass <- c("Sapindales", "Malvales", "Fabales", "Fabales")
lookup <- cbind.data.frame(Species, Genus, Family, Subclass)
# Assign values for each level (Shimatani's taxonomic distance)
tax_distance <- c(Species = 0, Genus = 1, Family = 2, Subclass = 3, Other = 4)
tax_distance
tax2dist(lookup, tax_distance)
# Generate pairwise distances
distance <- tax2dist(lookup, tax_distance)
similarity <- dist2sim(distance, "linear")
similarity
similarity
similarity$1
similarity
dist2sim(distance, "linear")
str(similarity)
similarity@similarity
# Create Lookup table
Species <- c("yezoensis", "haitanensis")
Genus <- c("Pyropia", "Pyropia")
lookup <- cbind.data.frame(Species, Genus)
# Assign values for each level (Shimatani's taxonomic distance)
tax_distance <- c(Species = 0, Genus = 1)
# Generate pairwise distances
distance <- tax2dist(lookup, tax_distance)
# Create Lookup table
Species <- c("yezoensis", "haitanensis")
Genus <- c("Pyropia", "Pyropia")
lookup <- cbind.data.frame(Species, Genus)
lookup
# Assign values for each level (Shimatani's taxonomic distance)
tax_distance <- c(Species = 0, Genus = 1)
tax2dist(lookup, tax_distance)
